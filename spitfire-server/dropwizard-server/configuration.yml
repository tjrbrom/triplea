githubApiToken: ${GITHUB_API_TOKEN:-}
githubWebServiceUrl: https://api.github.com
githubOrg: triplea-game
githubRepo: triplea
githubOrgForErrorReports: triplea-game
githubRepoForErrorReports: ${ERROR_REPORT_GITHUB_REPO:-test}
githubMapsOrgName: triplea-maps


latestVersionFetcherEnabled: ${LATEST_VERSION_FETCHER_ENABLED:-true}


# If map indexing is enabled, it will begin shortly after server startup.
# If disabled no map indexing will occur.
mapIndexingEnabled: ${MAP_INDEXING_ENABLED:-false}

# How often between map indexing runs. On each map indexing run we will
# index all maps. If the previous map indexing run is still going
# we will then have multiple indexing jobs running at the same time.
# To avoid overlapping indexing jobs, this value needs to be greater than:
#  (number of maps) * (processing time) * (indexingTaskDelaySeconds / 60)
mapIndexingPeriodMinutes: ${MAP_INDEXING_PERIOD_MINUTES:-300}

# Time period in seconds between indexing each individual map. This must
# be configured to avoid github API rate limiting.
# Eg:
#      1 -> one indexing task per second -> 3600 requests per hour.
#      5 -> one indexing task every 5 seconds -> 720 requests per hour.
#     60 -> one indexing task per minute -> 60 requests per hour.
#    120 -> one indexing task every other minute -> 30 requests per hour.
# Unauthenticated Github API requests are limited to 60 request per hour.
# Authenticated Github API requests are limited to 1000 requests per hour.
indexingTaskDelaySeconds: ${MAP_INDEXING_DELAY_SECONDS:-120}

# this is to help guarantee that we do not accidentally use test configuration in prod.
gameHostConnectivityCheckEnabled: ${GAME_HOST_CONNECTIVITY_CHECK_ENABLED:-false}

# When disabled, API calls to github to create error reports will not
# be made and instead a hardcoded value returned.
errorReportToGithubEnabled: ${ERROR_REPORT_TO_GITHUB_ENABLED:-false}

# Whether to print out SQL statements as executed, useful for debugging.
logSqlStatements: false

database:
  driverClass: org.postgresql.Driver
  user: ${DATABASE_USER:-lobby_user}
  password: ${DATABASE_PASSWORD:-lobby}
  url: jdbc:postgresql://${DB_URL:-localhost:5432/lobby_db}
  properties:
    charSet: UTF-8
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: select 1

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 32

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
  evictionInterval: 10s

  # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
  minIdleTime: 1 minute


logging:
  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO
  loggers:
    # Set this to DEBUG to troubleshoot HTTP 400 "Unable to process JSON" errors.
    io.dropwizard.jersey.jackson.JsonProcessingExceptionMapper: INFO

server:
  applicationConnectors:
    - type: http
      port: ${HTTP_PORT:-8080}
      # useForwardedHeaders is important for when behind a reverse proxy (NGINX)
      # Without this 'getRemoteAddr' will return the IP of the reverse proxy server.
      # By default when building locally useForwardedPorts should be 'false', but
      # for all other environments that do have a NGINX server, the value should be
      # set to true.
      useForwardedHeaders: ${USE_FORWARDED_HEADERS:-false}
