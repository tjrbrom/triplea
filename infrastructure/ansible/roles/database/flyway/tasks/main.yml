- name: create service user to run flyway
  user:
    name: flyway
    create_home: yes
    system: yes

- name: Download flyway CLI
  get_url:
    url: "{{ flyway_download_location }}"
    dest: "/home/flyway/flyway-cli.tar.gz"
    mode: "644"
    checksum: "md5:57f496acc6399fe30ee1fd957545abf1"
    owner: flyway
    group: flyway

- name: extract flyway CLI
  unarchive:
    copy: no
    src: "/home/flyway/flyway-cli.tar.gz"
    dest: "/home/flyway/"
    creates: "{{ flyway_extracted_location }}"
    owner: flyway
    group: flyway

- name: copy flyway migrations zip if deploying latest
  when: using_latest == "true"
  copy:
    src: "migrations.zip"
    dest: "/home/flyway/migrations.zip"
    mode: "644"
    owner: flyway
    group: flyway

- name: download flyway migrations if deploying a specific version
  when: using_latest == "false"
  get_url:
    url: "{{ migrations_url }}"
    dest: "/home/flyway/migrations.zip"
    owner: flyway
    group: flyway

- name: create migration folders
  file:
    state: directory
    mode: "0755"
    owner: flyway
    group: flyway
    path : "{{ flyway_extracted_location }}/migrations"

- name: extract migrations
  unarchive:
     src: "/home/flyway/migrations.zip"
     remote_src: true
     dest: "{{ flyway_extracted_location }}/migrations"
     mode: "644"
     owner: flyway
     group: flyway

- name: run flyway
  become_user: flyway
  command: "{{ flyway_extracted_location }}/flyway -user={{ item.user }} -password={{ item.password }} -url={{ item.url }} -locations={{ item.migration_dir }} migrate"
  register: flyway
  changed_when: '"is up to date. No migration necessary" not in flyway.stdout'
  loop: "{{ flyway_args }}"
  loop_control:
    label: "{{ item.migration_dir }}"
  no_log: true 
