#!/bin/bash

set -eu

CUR_FOLDER=$(basename $(pwd))
if [ "$CUR_FOLDER" != infrastructure ]; then
  echo "Error, must be in the infrastructure folder to run this script."
  exit 1
fi

export VERSION=$(sed 's/.*=\s*//' ../game-core/src/main/resources/META-INF/triplea/product.properties)

export CRT_FILE="triplea-nginx-vagrant.crt"

function main() {
  symlinkNginxCert
  buildJars
  buildMigrations

  ansible-playbook -D -v \
      "$@" \
      -i ansible/inventory/vagrant \
      ansible/setup.yml

  ansible-playbook -D -v \
      "$@" \
      -i ansible/inventory/vagrant \
      ansible/site.yml
  # Update certs to pick up new or updated certs from nginx
  sudo update-ca-certificates -f
}

function symlinkNginxCert() {
  local link="/usr/local/share/ca-certificates/${CRT_FILE}"
  if [ ! -L "$link" ]; then
    sudo ln -s "$(pwd)/.vagrant/${CRT_FILE}" "$link"
  fi
}

function buildJars() {
  (
    cd ../
    ./gradlew :lobby-server:shadowJar :game-headless:shadowJar
    
    local targetFolder="./infrastructure/ansible/roles"
    mkdir -p "${targetFolder}/bot/files/" "${targetFolder}/lobby_server/files/"
    cp "game-headless/build/libs/triplea-game-headless-${VERSION}.jar" "${targetFolder}/bot/files/"
    cp "lobby-server/build/libs/triplea-lobby-server-${VERSION}.jar" "${targetFolder}/lobby_server/files/"
  ) 
}

function buildMigrations() {
  local targetFolder=./ansible/roles/database/flyway/files/
  if [ ! -e $targetFolder/migrations.zip ] || [ ! -e "$targetFolder/map-migrations.zip" ]; then
    (
      cd ..
      ./gradlew :database:release
    )
    mkdir -p $targetFolder
    cp ../database/build/distributions/migrations.zip $targetFolder
  fi
}

main "$@"
